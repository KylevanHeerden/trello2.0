{"version":3,"sources":["webpack:///./src/views/Finance.vue?71a5","webpack:///./src/components/LineGraph.vue?381f","webpack:///src/components/LineGraph.vue","webpack:///./src/components/LineGraph.vue?1500","webpack:///./src/components/LineGraph.vue","webpack:///src/views/Finance.vue","webpack:///./src/views/Finance.vue?b817","webpack:///./src/views/Finance.vue?08c5","webpack:///./src/views/Finance.vue?c87c","webpack:///../../../src/components/VAutocomplete/VAutocomplete.ts"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","programmesOptions","on","$event","getData","model","value","callback","$$v","chosenProgrammeId","expression","ref","scopedSlots","_u","key","fn","_g","_b","beginDate","clearDates","menu1","endDate","menu2","data1","data2","labels","budgetNumber","today","parseFloat","max","programmeName","committedCount","length","_v","_s","formatNum","committedTotal","actualTotal","at","y","_e","staticRenderFns","options","series","props","type","Array","default","require","budget","Number","currentMonth","String","required","data","title","text","align","grid","show","yaxis","xaxis","watch","chart","height","legend","position","forecastDataPoints","count","showAlways","min","formatter","toLocaleString","annotations","tooltip","num","result","computed","mounted","component","VContainer","components","beginIndex","endIndex","today2","filteredProducts","map","methods","dateString","getBuget","getProgrammeById","name","splitCommitted","forEach","undefined","product","payments","programmePaymentsArray","push","payment","x","date","committed","map1","sort","cutMap","filter","point","map2","acc","cur","todayPoint","sumPerDay","todayPoint2","index","todayPoint3","finalData21","todayPoint4","forcastNumber","split","current_month","committedTrue","accu","curr","created","$store","dispatch","VAutocomplete","VCardText","VCard","VCol","VDatePicker","VMenu","VRow","VTextField","defaultMenuProps","offsetY","offsetOverflow","transition","allowOverflow","autoSelectFirst","itemText","queryText","hideNoData","menuProps","noFilter","searchInput","lazySearch","classes","selectedIndex","computedItems","selectedValues","selectedItems","item","hasDisplayedItems","hideSelected","filteredItems","some","currentRange","selectedItem","getText","internalSearch","allItems","get","set","isAnyValueAllowed","isDirty","searchIsDirty","isSearching","multiple","menuCanShow","$_menuProps","find","i","listData","items","internalValue","isFocused","document","$refs","input","isMenuActive","val","oldVal","activateMenu","destroyed","onFilteredItemsChanged","onInternalSearchChanged","updateMenuDimensions","menu","changeSelectedIndex","keyCode","deleteCurrentItem","curIndex","curItem","getDisabled","lastIndex","nextIndex","nextItem","clearableCallback","genInput","autocomplete","domProps","genInputSlot","slot","genSelections","hasSlot","onClick","isAppendInner","e","onInput","target","onKeyDown","onSpaceDown","onTabDown","onUpDown","selectItem","setSelectedItems","setSearch","updateSelf","valueComparator","getValue","hasItem","indexOf","onCopy","currentItem","currentItemText","event"],"mappings":"kJAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,cAAc,CAACA,EAAG,QAAQ,CAACE,YAAY,QAAQC,MAAM,CAAC,QAAU,WAAW,CAACH,EAAG,QAAQ,CAACG,MAAM,CAAC,KAAO,KAAK,GAAK,IAAI,GAAK,MAAM,CAACH,EAAG,iBAAiB,CAACG,MAAM,CAAC,MAAQ,YAAY,MAAQP,EAAIQ,mBAAmBC,GAAG,CAAC,OAAS,SAASC,GAAQ,OAAOV,EAAIW,YAAYC,MAAM,CAACC,MAAOb,EAAqB,kBAAEc,SAAS,SAAUC,GAAMf,EAAIgB,kBAAkBD,GAAKE,WAAW,wBAAwB,GAAGb,EAAG,QAAQ,CAACG,MAAM,CAAC,KAAO,KAAK,GAAK,IAAI,GAAK,MAAM,CAACH,EAAG,SAAS,CAACc,IAAI,OAAOX,MAAM,CAAC,0BAAyB,EAAK,WAAa,mBAAmB,WAAW,GAAG,YAAY,QAAQ,YAAY,QAAQY,YAAYnB,EAAIoB,GAAG,CAAC,CAACC,IAAI,YAAYC,GAAG,SAASJ,GAC9tB,IAAIT,EAAKS,EAAIT,GACTF,EAAQW,EAAIX,MAChB,MAAO,CAACH,EAAG,eAAeJ,EAAIuB,GAAGvB,EAAIwB,GAAG,CAACjB,MAAM,CAAC,MAAQP,EAAIyB,UAAU,MAAQ,aAAa,eAAe,eAAe,SAAW,GAAG,UAAY,IAAIhB,GAAG,CAAC,cAAc,SAASC,GAAQ,OAAOV,EAAI0B,WAAW,YAAY,eAAenB,GAAM,GAAOE,SAAUG,MAAM,CAACC,MAAOb,EAAS,MAAEc,SAAS,SAAUC,GAAMf,EAAI2B,MAAMZ,GAAKE,WAAW,UAAU,CAACb,EAAG,gBAAgB,CAACG,MAAM,CAAC,WAAW,GAAG,WAAa,IAAIE,GAAG,CAAC,OAAS,SAASC,GAAQ,OAAOV,EAAIW,YAAYC,MAAM,CAACC,MAAOb,EAAa,UAAEc,SAAS,SAAUC,GAAMf,EAAIyB,UAAUV,GAAKE,WAAW,gBAAgB,IAAI,GAAGb,EAAG,QAAQ,CAACG,MAAM,CAAC,KAAO,KAAK,GAAK,IAAI,GAAK,MAAM,CAACH,EAAG,SAAS,CAACc,IAAI,OAAOX,MAAM,CAAC,0BAAyB,EAAK,WAAa,mBAAmB,WAAW,GAAG,YAAY,QAAQ,YAAY,QAAQY,YAAYnB,EAAIoB,GAAG,CAAC,CAACC,IAAI,YAAYC,GAAG,SAASJ,GAC3yB,IAAIT,EAAKS,EAAIT,GACTF,EAAQW,EAAIX,MAChB,MAAO,CAACH,EAAG,eAAeJ,EAAIuB,GAAGvB,EAAIwB,GAAG,CAACjB,MAAM,CAAC,MAAQP,EAAI4B,QAAQ,MAAQ,WAAW,eAAe,eAAe,SAAW,GAAG,UAAY,IAAInB,GAAG,CAAC,cAAc,SAASC,GAAQ,OAAOV,EAAI0B,WAAW,UAAU,eAAenB,GAAM,GAAOE,SAAUG,MAAM,CAACC,MAAOb,EAAS,MAAEc,SAAS,SAAUC,GAAMf,EAAI6B,MAAMd,GAAKE,WAAW,UAAU,CAACb,EAAG,gBAAgB,CAACG,MAAM,CAAC,WAAW,GAAG,WAAa,IAAIE,GAAG,CAAC,OAAS,SAASC,GAAQ,OAAOV,EAAIW,YAAYC,MAAM,CAACC,MAAOb,EAAW,QAAEc,SAAS,SAAUC,GAAMf,EAAI4B,QAAQb,GAAKE,WAAW,cAAc,IAAI,IAAI,GAAGb,EAAG,QAAQ,CAACE,YAAY,iBAAiBC,MAAM,CAAC,QAAU,WAAW,CAACH,EAAG,YAAY,CAACG,MAAM,CAAC,MAAQP,EAAI8B,MAAM,MAAQ9B,EAAI+B,MAAM,OAAS/B,EAAIgC,OAAO,OAAShC,EAAIiC,aAAa,aAAejC,EAAIkC,MAAM,IAAMC,WAAWnC,EAAIoC,KAAK,cAAgBpC,EAAIqC,cAAc,eAAiBrC,EAAIsC,mBAAmB,GAAwB,GAApBtC,EAAI8B,MAAMS,OAAanC,EAAG,QAAQ,CAACE,YAAY,YAAYC,MAAM,CAAC,QAAU,QAAQ,CAACH,EAAG,QAAQ,CAACE,YAAY,YAAYC,MAAM,CAAC,KAAO,KAAK,GAAK,KAAK,GAAK,OAAO,CAACH,EAAG,cAAc,CAACA,EAAG,QAAQ,CAACG,MAAM,CAAC,QAAU,UAAU,CAACH,EAAG,QAAQ,CAACG,MAAM,CAAC,KAAO,KAAK,GAAK,IAAI,GAAK,MAAM,CAACH,EAAG,MAAM,CAACE,YAAY,cAAc,CAACN,EAAIwC,GAAG,aAAapC,EAAG,MAAM,CAACE,YAAY,cAAc,CAACN,EAAIwC,GAAG,4BAA4BpC,EAAG,MAAM,CAACE,YAAY,cAAc,CAACN,EAAIwC,GAAG,0BAA0BpC,EAAG,MAAM,CAACE,YAAY,cAAc,CAACN,EAAIwC,GAAG,0BAA0BpC,EAAG,QAAQ,CAACG,MAAM,CAAC,KAAO,KAAK,GAAK,IAAI,GAAK,MAAM,CAACH,EAAG,MAAM,CAACE,YAAY,eAAe,CAACN,EAAIwC,GAAG,KAAKxC,EAAIyC,GAAGzC,EAAI0C,UAAU1C,EAAIiC,kBAAkB7B,EAAG,MAAM,CAACE,YAAY,eAAe,CAACN,EAAIwC,GAAG,KAAKxC,EAAIyC,GAAGzC,EAAI0C,UAAU1C,EAAI2C,oBAAoBvC,EAAG,MAAM,CAACE,YAAY,eAAe,CAACN,EAAIwC,GAAG,KAAKxC,EAAIyC,GAAGzC,EAAI0C,UAAU1C,EAAI4C,iBAAiBxC,EAAG,MAAM,CAACE,YAAY,eAAe,CAACN,EAAIwC,GAAG,KAAKxC,EAAIyC,GAAGzC,EAAI0C,UAAU1C,EAAI+B,MAAMc,IAAI,GAAGC,UAAU,IAAI,IAAI,GAAG1C,EAAG,QAAQ,CAACE,YAAY,YAAYC,MAAM,CAAC,KAAO,KAAK,GAAK,IAAI,GAAK,MAAM,CAACH,EAAG,eAAe,CAACE,YAAY,gBAAgBC,MAAM,CAAC,KAAO,SAAS,MAAQ,UAAU,QAAU,GAAG,SAAW,GAAG,MAAQ,IAAIK,MAAM,CAACC,MAAOb,EAAO,IAAEc,SAAS,SAAUC,GAAMf,EAAIoC,IAAIrB,GAAKE,WAAW,UAAU,IAAI,GAAGjB,EAAI+C,KAAK3C,EAAG,UAAU,IACxmE4C,EAAkB,G,uKCPlB,EAAS,WAAa,IAAIhD,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,cAAc,CAACA,EAAG,YAAY,CAACG,MAAM,CAAC,KAAO,OAAO,QAAUP,EAAIiD,QAAQ,OAASjD,EAAIkD,WAAW,IACjM,EAAkB,GCQtB,GACEC,MAAO,CACLrB,MAAO,CACLsB,KAAMC,MACNC,QAAS,KACTC,SAAS,GAEXxB,MAAO,CACLqB,KAAMC,MACNC,QAAS,KACTC,SAAS,GAEXvB,OAAQ,CACNoB,KAAMC,MACNC,QAAS,KACTC,SAAS,GAEXC,OAAQ,CACNJ,KAAMK,OACNF,SAAS,GAEXG,aAAc,CACZN,KAAMO,OACNC,UAAU,GAEZxB,IAAK,CACHgB,KAAMK,OACNF,SAAS,GAEXlB,cAAe,CACbe,KAAMO,OACNC,UAAU,GAEZtB,eAAgB,CACdc,KAAMK,OACNG,UAAU,IAGdC,KAtCF,WAuCI,MAAO,CACLZ,QAAS,CACPa,MAAO,CACLC,KAAM,qBACNC,MAAO,UAGTC,KAAM,CACJC,MAAM,GAGRC,MAAO,CACLD,MAAM,GAGRE,MAAO,CACLhB,KAAM,aAGVF,OAAQ,CACd,CACQ,KAAR,sBACQ,KAAR,IAEA,CACQ,KAAR,mCACQ,KAAR,OAMEmB,MAAO,CAELvC,MAAO,WACL7B,KAAKiD,OAAS,CACpB,CACQ,KAAR,YAEA,CACQ,KAAR,aAIMjD,KAAKgD,QAAU,CACbqB,MAAO,CACLC,OAAQ,KAGVT,MAAO,CACLC,KAAM,GAAhB,mDACUC,MAAO,UAGTQ,OAAQ,CACNN,MAAM,EACNO,SAAU,OAGZR,KAAM,CACJC,MAAM,GAGRQ,mBAAoB,CAClBC,MAAO1E,KAAKqC,gBAGd6B,MAAO,CACLD,MAAM,EACNU,YAAY,EACZC,IAAK,EACLzC,IAAKnC,KAAKmC,IAEV0B,MAAO,CACLC,KAAM,mBAER/B,OAAQ,CACN8C,UAAW,SAAvB,GACc,OAAOjE,EAAMkE,eAAe,YAKlCX,MAAO,CACLhB,KAAM,WACNpB,OAAQ,CACN8C,UAAW,SAAvB,KACc,OAAO,IAArB,oCAKQE,YAAa,CACXb,MAAO,CACjB,CACY,EAAZ,YACY,YAAZ,UACY,MAAZ,CACc,YAAd,UACc,MAAd,CACgB,MAAhB,OACgB,WAAhB,WAEc,KAAd,YAKUC,MAAO,CACjB,CACY,EAAZ,sCACY,YAAZ,UACY,MAAZ,CACc,YAAd,UACc,MAAd,CACgB,MAAhB,OACgB,WAAhB,WAEc,KAAd,oBAMQa,QAAS,CACPnC,EAAG,CACDgC,UAAW,SAAvB,GACc,GAAII,EAAM,IAAM,EACd,MAAO,KAAOA,EAAIH,eAAe,SAEjC,IAAhB,EACA,qBACA,wBACA,YACA,qBACA,WACA,MACA,qBACA,WACA,cAGgB,MAAO,KAAOI,OAS1B/C,IAAK,WACHnC,KAAKgD,QAAU,CACbqB,MAAO,CACLC,OAAQ,KAGVT,MAAO,CACLC,KAAM,GAAhB,mDACUC,MAAO,UAGTQ,OAAQ,CACNN,MAAM,EACNO,SAAU,OAGZR,KAAM,CACJC,MAAM,GAGRQ,mBAAoB,CAClBC,MAAO1E,KAAKqC,gBAGd6B,MAAO,CACLD,MAAM,EACNU,YAAY,EACZC,IAAK,EACLzC,IAAKnC,KAAKmC,IAEV0B,MAAO,CACLC,KAAM,mBAER/B,OAAQ,CACN8C,UAAW,SAAvB,GACc,OAAOjE,EAAMkE,eAAe,YAKlCX,MAAO,CACLhB,KAAM,WACNpB,OAAQ,CACN8C,UAAW,SAAvB,KACc,OAAO,IAArB,oCAKQE,YAAa,CACXb,MAAO,CACjB,CACY,EAAZ,YACY,YAAZ,UACY,MAAZ,CACc,YAAd,UACc,MAAd,CACgB,MAAhB,OACgB,WAAhB,WAEc,KAAd,YAKUC,MAAO,CACjB,CACY,EAAZ,sCACY,YAAZ,UACY,MAAZ,CACc,YAAd,UACc,MAAd,CACgB,MAAhB,OACgB,WAAhB,WAEc,KAAd,oBAMQa,QAAS,CACPnC,EAAG,CACDgC,UAAW,SAAvB,GACc,GAAII,EAAM,IAAM,EACd,MAAO,KAAOA,EAAIH,eAAe,SAEjC,IAAhB,EACA,qBACA,wBACA,YACA,qBACA,WACA,MACA,qBACA,WACA,cAGgB,MAAO,KAAOI,QAS5BC,SAAU,GAEVC,QA5SF,cCTmV,I,6CCO/UC,EAAY,eACd,EACA,EACA,GACA,EACA,KACA,KACA,MAIa,EAAAA,EAAiB,QAKhC,IAAkBA,EAAW,CAACC,aAAA,OC0G9B,OACEC,WAAY,CAAd,aACE3B,KAAM,WACJ,MAAO,CACLpC,UAAW,KACXG,QAAS,KACT6D,WAAY,KACZC,SAAU,KACV1E,kBAAmB,GACnBc,MAAO,GACPC,MAAO,GACPC,OAAQ,GACRL,OAAO,EACPE,OAAO,EACPI,aAAc,EACdG,IAAK,IACLC,cAAe,GACfM,eAAgB,EAChBC,YAAa,EACbN,eAAgB,EAChBJ,MAAO,IAAb,iCAIEkD,SAAU,OAAZ,OAAY,CAAZ,iCACA,gBACI,SAAJ,YAAM,OAAN,qBACI,WAAJ,YAAM,OAAN,4BAEA,sCALA,IAOI1B,aAPJ,WAQM,IAAN,WAEA,uBACA,kBAEA,GACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAGA,aAEM,OAAOiC,GAITC,iBAlCJ,WAkCA,WACA,wBACA,YAAQ,OACR,iDACA,0BACA,uBACA,yBAGM,OAAOA,GAGTpF,kBA9CJ,WA+CM,IAAN,mCACQ,MAAO,CAAf,2BAEM,OAAOqF,KAIXC,QAAS,CAEPpE,WAFJ,SAEA,GACwB,SAAdqE,EACF9F,KAAKwB,UAAY,KACzB,WACQxB,KAAK2B,QAAU,MAGjB3B,KAAKU,WAIP+B,UAbJ,SAaA,GACM,GAAIwC,EAAM,IAAM,EACd,OAAOA,EAAIH,eAAe,SAE1B,IAAR,EACA,qBACA,wBACA,YACA,qBACA,WACA,MACA,qBACA,WACA,cAGQ,OAAOI,GAKXxE,QAlCJ,WAkCA,WACA,aACA,sDAGMV,KAAKgC,aAAe+D,EAEpB/F,KAAKmC,IAAM4D,EAEX/F,KAAKoC,cAAgBpC,KAAKgG,iBAAiBhG,KAAKe,mBAAmBkF,KAEnEjG,KAAKkG,iBAEL,IAAN,KAGMlG,KAAK2F,iBAAiBQ,SAAQ,SAApC,QACiCC,IAArBC,EAAQC,UACVD,EAAQC,SAASH,SAAQ,SAAnC,GACYI,EAAuBC,KAAKC,SAMlC,IAAN,qBACQ,MAAO,CACLC,EAAGD,EAAQE,KACX9D,EAAGX,WAAWuE,EAAQ7F,OACtBgG,UAAWH,EAAQG,cAKvBC,EAAKC,MAAK,SAAhB,4BAIM,IAAN,KAGM,GAAuB,OAAnB9G,KAAKwB,WAAuC,OAAjBxB,KAAK2B,QAAkB,CACpDoF,EAASF,EAAKG,QAAO,SAA7B,GACU,OAAOC,EAAMP,GAAK,EAA5B,6BAIQ,IAAR,qBACU,OAAOD,EAAQC,KAGjB1G,KAAK+B,OAASmF,EAAKJ,YAE3B,0BACQC,EAASF,EAAKG,QAAO,SAA7B,GACU,OAAOC,EAAMP,GAAK,EAA5B,aAIQ,IAAR,qBACU,OAAOD,EAAQC,KAGjB1G,KAAK+B,OAAS,EAAtB,YAEA,wBACQgF,EAASF,EAAKG,QAAO,SAA7B,GACU,OAAOC,EAAMP,GAAK,EAA5B,WAIQ,IAAR,qBACU,OAAOD,EAAQC,KAGjB1G,KAAK+B,OAAS,EAAtB,WAEA,CACQgF,EAASF,EAET,IAAR,qBACU,OAAOJ,EAAQC,KAGjB1G,KAAK+B,OAAS,EAAtB,OA0FM,IAAN,0BAeQ,OAdkB,GAAdoF,EAAI7E,OACN6E,EAAIX,KAAK,CACPE,EAAGU,EAAIV,EACP7D,EAAGuE,EAAIvE,IAEnB,gBACUsE,EAAIvE,IAAI,GAAGC,EAAIsE,EAAIvE,IAAI,GAAGC,EAAIuE,EAAIvE,EAElCsE,EAAIX,KAAK,CACPE,EAAGU,EAAIV,EACP7D,EAAGuE,EAAIvE,IAIJsE,IACf,IAGA,0BAOQ,OANkB,GAAdA,EAAI7E,OACN6E,EAAIX,KAAK,CAAnB,cAEUW,EAAIX,KAAK,CAAnB,yBAGeW,IACf,IAGA,sBACQF,EAAMP,EAAK,EAAnB,SAIM,QAAkBN,GAAdiB,EAAyB,CAC3BC,EAAUd,KAAK,CAAvB,mBAGQc,EAAUR,MAAK,SAAvB,4BAEQ,IAAR,sBACU,OAAOG,EAAMP,GAAK,EAA5B,SAGA,eAEQa,EAAY1E,EAAIyE,EAAU1E,GAAG4E,EAAQ,GAAG3E,EAI1C,IAAN,sBACQoE,EAAMP,EAAK,EAAnB,SAIM,QAAmBN,GAAfqB,EAA0B,CAC5BC,EAAYlB,KAAK,CAAzB,mBAGQkB,EAAYZ,MAAK,SAAzB,4BAEQ,IAAR,sBACU,OAAOG,EAAMP,GAAK,EAA5B,SAGA,eAEQiB,EAAY9E,EAAI6E,EAAY9E,GAAG,EAAvC,KAGM5C,KAAK6B,MAAQyF,EACbtH,KAAK8B,MAAQ4F,EAEb,IAAN,IAGMJ,EAAUnB,SAAQ,SAAxB,GACYc,EAAMP,EAAI,EAAtB,QACUkB,GAAiB,MAIrB5H,KAAKqC,eAAiBuF,GAGxB1B,eAtSJ,WAuSM,IAAN,KACA,KAEA,6BAGMlG,KAAK2F,iBAAiBQ,SAAQ,SAApC,QACiCC,IAArBC,EAAQC,UACVD,EAAQC,SAASH,SAAQ,SAAnC,GACgBM,EAAQE,KAAKkB,MAAM,KAAK,GAAKC,EAC/BC,EAAcvB,KAAKC,GACjC,gBAMM,IAAN,0BACQ,OAAOuB,EAAO9F,WAAW+F,EAAKrH,SACtC,GAGA,0BACQ,OAAOoH,EAAO9F,WAAW+F,EAAKrH,SACtC,GAEMZ,KAAK2C,YAAcA,EACnB3C,KAAK0C,eAAiBA,IAI1BwF,QApZF,WAqZIlI,KAAKmI,OAAOC,SAAS,eACrBpI,KAAKmI,OAAOC,SAAS,kBAGvBhD,QAzZF,cCjIiV,I,gGCQ7U,EAAY,eACd,EACAtF,EACAiD,GACA,EACA,KACA,WACA,MAIa,eAAiB,QAYhC,IAAkB,EAAW,CAACsF,gBAAA,KAAcC,UAAAC,EAAA,KAAUC,OAAA,KAAKlD,aAAA,KAAWmD,cAAA,KAAYC,QAAA,KAAMC,OAAA,KAAKC,aAAA,Q,2DC/B7F,W,0KCmBMC,EAAmB,yCAAH,IAEpBC,SAFuB,EAGvBC,gBAHuB,EAIvBC,YAAY,IAIC,qBAAe,CAC5B/C,KAD4B,iBAG5B/C,MAAO,CACL+F,cAAe,CACb9F,KADa,QAEbE,SAAS,GAEX6F,gBAAiB,CACf/F,KADe,QAEfE,SAAS,GAEX2D,OAAQ,CACN7D,KADM,SAENE,QAAS,gBACP,OAAO8F,EAAA,4BAAqCC,EAArC,sBAAP,IAGJC,WAfK,QAgBLC,UAAW,CACTnG,KAAM,+BADG,KAETE,QAAS,kBAAMwF,IAEjBU,SApBK,QAqBLC,YAAa,CACXrG,KAAMO,SAIVE,KA7B4B,WA8B1B,MAAO,CACL6F,WAAYzJ,KAAKwJ,cAIrBrE,SAAU,CACRuE,QADQ,WAEN,wCACK,qCADE,OAAP,IAEE,kBAFK,EAGL,qCAAsC1J,KAAK2J,eAAiB,KAGhEC,cARQ,WASN,OAAO5J,KAAP,eAEF6J,eAXQ,WAWM,WACZ,OAAO7J,KAAK8J,cAAclE,KAAI,SAAAmE,GAAI,OAAI,WAAtC,OAEFC,kBAdQ,WAcS,WACf,OAAOhK,KAAKiK,aACRjK,KAAKkK,cAAcC,MAAK,SAAAJ,GAAI,OAAK,UAD9B,MAEH/J,KAAKkK,cAAc5H,OAFvB,GAIF8H,aAnBQ,WAoBN,aAAIpK,KAAKqK,aAA6B,EAE/B3G,OAAO1D,KAAKsK,QAAQtK,KAApB,eAAP,QAEFkK,cAxBQ,WAwBK,WACX,OAAKlK,KAAD,aAAqBA,KAArB,UAAJ,MAA0CA,KAAKuK,eAA+BvK,KAAP,SAEhEA,KAAKwK,SAASxD,QAAO,SAAA+C,GAC1B,IAAMnJ,EAAQ,eAAoBmJ,EAAM,EAAxC,UACMjG,EAAO,MAAAlD,EAAgB8C,OAAhB9C,GAAb,GAEA,OAAO,WAAkB8C,OAAO,EAAzB,gBAAP,OAGJ6G,eAAgB,CACdE,IADc,WAEZ,OAAOzK,KAAP,YAEF0K,IAJc,SAIX,GAGG1K,KAAKyJ,aAAT,IACEzJ,KAAA,aACAA,KAAA,kCAIN2K,kBA/CQ,WAgDN,UAEFC,QAlDQ,WAmDN,OAAO5K,KAAK6K,eAAiB7K,KAAK8J,cAAcxH,OAAhD,GAEFwI,YArDQ,WAsDN,OACE9K,KAAK+K,UACL/K,KAFK,eAILA,KAAK6K,eACL7K,KAAKuK,iBAAmBvK,KAAKsK,QAAQtK,KALvC,eAQFgL,YA9DQ,WA+DN,QAAKhL,KAAL,YAEOA,KAAKgK,oBAAsBhK,KAAlC,aAEFiL,YAnEQ,WAoEN,IAAM/H,EAAQ,yCAAd,MAEA,OADCA,EAAA,aAA6B,kCAA4BA,EAAA,cAA5B,IAA7B,OACD,iCAAO,GAEFA,IAGP2H,cA3EQ,WA4EN,OAA8B,MAAvB7K,KAAKuK,gBAAZ,KACEvK,KAAKuK,gBAETF,aA/EQ,WA+EI,WACV,OAAIrK,KAAJ,SAA0B,KAEnBA,KAAK8J,cAAcoB,MAAK,SAAAC,GAC7B,OAAO,kBAAqB,WAArB,GAAuC,WAAc,EAA5D,oBAGJC,SAtFQ,WAuFN,IAAMxH,EAAO,sCAAb,MAaA,OAXAA,EAAA,uCACKA,EADQ,OAAb,IAEEyH,MAAOrL,KAFI,iBAGXuJ,SACEvJ,KAAKuJ,WACJvJ,KADD,cAECA,KAAKkK,cANG,OAQXV,YAAaxJ,KAAKuK,iBAGpB,IAIJnG,MAAO,CACL8F,cADK,yBAELoB,cAFK,YAGLC,UAHK,SAGI,GACP,GACEC,SAAA,wBAAkCxL,KAAlC,QACAA,KAAA,aAAoBA,KAAKyL,MAAMC,MAA/B,WAEAF,SAAA,2BAAqCxL,KAArC,QACAA,KAAA,aAAoBA,KAAKyL,MAAMC,MAA/B,OACA1L,KAAA,eAGJ2L,aAbK,SAaO,IACNC,GAAQ5L,KAAZ,UAEAA,KAAA,kBAEFqL,MAlBK,SAkBA,KAOCQ,GAAUA,EAAZ,SACA7L,KADA,aAEAA,KAFA,WAGCA,KAHD,eAIA4L,EALF,QAME5L,KAAK8L,gBAETtC,YAhCK,SAgCM,GACTxJ,KAAA,cAEFuK,eAnCK,0BAoCLpB,SAAU,cAGZjB,QAlL4B,WAmL1BlI,KAAA,aAGF+L,UAtL4B,WAuL1BP,SAAA,2BAAqCxL,KAArC,SAGF6F,QAAS,CACPmG,uBADO,SACe,KAA+B,WAG/CJ,IAAJ,IAEA5L,KAAA,iBAEAA,KAAA,WAAe,WAEV,EAAD,iBACC,IAAA4L,EAAA,QACE,EAHL,mBAMA,wBACA,wBAGJK,wBAnBO,WAoBLjM,KAAA,wBAEFkM,qBAtBO,WAwBLlM,KAAA,cAAqBA,KAAKyL,MAA1B,MAAwCzL,KAAKyL,MAAMU,KAAnD,oBAEFC,oBA1BO,SA0BY,GAGbpM,KAAJ,gBAEIA,KAAK+K,UAAYsB,IAAY,OAAjC,MACE,IAAIrM,KAAK2J,cACP3J,KAAA,cAAqBA,KAAK8J,cAAcxH,OAAxC,EAEAtC,KAAA,gBAEOA,KAAK+K,UAAYsB,IAAY,OAAjC,MACDrM,KAAK2J,eAAiB3J,KAAK8J,cAAcxH,OAA7C,EACEtC,KAAA,iBAEAA,KAAA,gBAEOqM,IAAY,OAAZ,WAAkCA,IAAY,OAAlD,QACLrM,KAAA,sBAGJsM,kBA/CO,WAgDL,IAAMC,EAAWvM,KAAjB,cACMwM,EAAUxM,KAAK8J,cAFN,GAKf,GACG9J,KAAD,gBACAA,KAAKyM,YAFP,IAKA,IAAMC,EAAY1M,KAAK8J,cAAcxH,OAVtB,EAcf,IACE,IAAAtC,KAAK2J,eADP,IAEE+C,EAFF,CASA,IAAMpK,EAAStC,KAAK8J,cAApB,OACM6C,EAAYJ,IAAajK,EAAb,EAAAiK,EAEdA,EAFJ,EAGMK,EAAW5M,KAAK8J,cAAtB,GAEA,EAGE9J,KAAA,cAFAA,KAAA,SAAcA,KAAK+K,SAAW,GAA9B,MAKF/K,KAAA,qBAjBEA,KAAA,kBAmBJ6M,kBApFO,WAqFL7M,KAAA,oBAEA,qDAEF8M,SAzFO,WA0FL,IAAMpB,EAAQ,qCAAd,MAUA,OARAA,EAAA,KAAa,eAAUA,EAAD,KAAc,CAClCpL,MAAO,CACL,wBAAyB,eAAqBN,KAAKyL,MAAN,KADxC,iBAELsB,aAAc,eAAqBrB,EAAD,kCAEpCsB,SAAU,CAAEpM,MAAOZ,KAAKuK,kBAG1B,GAEF0C,aAtGO,WAuGL,IAAMC,EAAO,yCAAb,MAIA,OAFAA,EAAA,2BAEA,GAEFC,cA7GO,WA8GL,OAAOnN,KAAKoN,SAAWpN,KAAhB,SACH,0CADGA,MAAP,IAIFqN,QAlHO,SAkHA,GACArN,KAAL,gBAEAA,KAAA,iBACKA,KAAK2J,eADV,EAEI3J,KAFJ,UAIKA,KAAKsN,cAAcC,EAAxB,SAAmCvN,KAAK8L,iBAE1C0B,QA3HO,SA2HA,GACL,KACExN,KAAK2J,eAAL,IACC4D,EAFH,QAKA,IAAME,EAASF,EAAf,OACM3M,EAAQ6M,EAPC,MAUXA,EAAJ,OAAkBzN,KAAK8L,eAEvB9L,KAAA,iBACAA,KAAA,SAAgByN,EAAA,UAAmBA,EAAA,SAAnC,WAEFC,UA1IO,SA0IE,GACP,IAAMrB,EAAUkB,EAAhB,SAGEA,EAAA,SACC,CAAC,OAAD,KAAgB,OAAhB,cAFH,IAIE,8CAOFvN,KAAA,wBAEF2N,YA1JO,SA0JI,KACXC,UA3JO,SA2JE,GACP,8CACA5N,KAAA,cAEF6N,SA/JO,SA+JC,GAENN,EAFgB,iBAOhBvN,KAAA,gBAEF8N,WAxKO,SAwKG,GACR,+CACA9N,KAAA,aAEF+N,iBA5KO,WA6KL,6CADc,MAKT/N,KAAL,WAAqBA,KAAKgO,aAE5BA,UAnLO,WAmLE,WAGPhO,KAAA,WAAe,WAEV,EAAD,UACC,EADD,gBAEC,EAHH,eAKE,kBACG,gBAAD,QACA,EADA,UAEA,EAHoB,aAMlB,UAAa,EANjB,mBAUNiO,WAtMO,YAuMAjO,KAAD,eACDA,KADH,iBAIKA,KAAKkO,gBACRlO,KADG,eAEHA,KAAKmO,SAASnO,KAFhB,iBAIEA,KAAA,cAGJoO,QAlNO,SAkNA,GACL,OAAOpO,KAAK6J,eAAewE,QAAQrO,KAAKmO,SAAjC,KAAP,GAEFG,OArNO,SAqND,GAAuB,QAC3B,QAAItO,KAAK2J,cAAT,CAEA,IAAM4E,EAAcvO,KAAK8J,cAAc9J,KAAvC,eACMwO,EAAkBxO,KAAKsK,QAA7B,GACA,SAAAmE,EAAA,0CACA,SAAAA,EAAA,wEACAA,EAAA","file":"js/chunk-6d8eafc8.13234e83.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',[_c('v-row',{staticClass:\"pl-10\",attrs:{\"justify\":\"center\"}},[_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"2\",\"md\":\"2\"}},[_c('v-autocomplete',{attrs:{\"label\":\"Programme\",\"items\":_vm.programmesOptions},on:{\"change\":function($event){return _vm.getData()}},model:{value:(_vm.chosenProgrammeId),callback:function ($$v) {_vm.chosenProgrammeId=$$v},expression:\"chosenProgrammeId\"}})],1),_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"2\",\"md\":\"2\"}},[_c('v-menu',{ref:\"menu\",attrs:{\"close-on-content-click\":true,\"transition\":\"scale-transition\",\"offset-y\":\"\",\"max-width\":\"290px\",\"min-width\":\"auto\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\nvar on = ref.on;\nvar attrs = ref.attrs;\nreturn [_c('v-text-field',_vm._g(_vm._b({attrs:{\"value\":_vm.beginDate,\"label\":\"Begin Date\",\"prepend-icon\":\"mdi-calendar\",\"readonly\":\"\",\"clearable\":\"\"},on:{\"click:clear\":function($event){return _vm.clearDates('begin')}}},'v-text-field',attrs,false),on))]}}]),model:{value:(_vm.menu1),callback:function ($$v) {_vm.menu1=$$v},expression:\"menu1\"}},[_c('v-date-picker',{attrs:{\"no-title\":\"\",\"scrollable\":\"\"},on:{\"change\":function($event){return _vm.getData()}},model:{value:(_vm.beginDate),callback:function ($$v) {_vm.beginDate=$$v},expression:\"beginDate\"}})],1)],1),_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"2\",\"md\":\"2\"}},[_c('v-menu',{ref:\"menu\",attrs:{\"close-on-content-click\":true,\"transition\":\"scale-transition\",\"offset-y\":\"\",\"max-width\":\"290px\",\"min-width\":\"auto\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\nvar on = ref.on;\nvar attrs = ref.attrs;\nreturn [_c('v-text-field',_vm._g(_vm._b({attrs:{\"value\":_vm.endDate,\"label\":\"End Date\",\"prepend-icon\":\"mdi-calendar\",\"readonly\":\"\",\"clearable\":\"\"},on:{\"click:clear\":function($event){return _vm.clearDates('end')}}},'v-text-field',attrs,false),on))]}}]),model:{value:(_vm.menu2),callback:function ($$v) {_vm.menu2=$$v},expression:\"menu2\"}},[_c('v-date-picker',{attrs:{\"no-title\":\"\",\"scrollable\":\"\"},on:{\"change\":function($event){return _vm.getData()}},model:{value:(_vm.endDate),callback:function ($$v) {_vm.endDate=$$v},expression:\"endDate\"}})],1)],1)],1),_c('v-row',{staticClass:\"chartContainer\",attrs:{\"justify\":\"center\"}},[_c('LineGraph',{attrs:{\"data1\":_vm.data1,\"data2\":_vm.data2,\"labels\":_vm.labels,\"budget\":_vm.budgetNumber,\"currentMonth\":_vm.today,\"max\":parseFloat(_vm.max),\"programmeName\":_vm.programmeName,\"committedCount\":_vm.committedCount}})],1),(_vm.data1.length != 0)?_c('v-row',{staticClass:\"pa-0 ma-0\",attrs:{\"justify\":\"end\"}},[_c('v-col',{staticClass:\"pa-0 ma-0\",attrs:{\"cols\":\"12\",\"sm\":\"10\",\"md\":\"10\"}},[_c('v-card-text',[_c('v-row',{attrs:{\"justify\":\"start\"}},[_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"3\",\"md\":\"3\"}},[_c('div',{staticClass:\"eventLabel\"},[_vm._v(\"Budget:\")]),_c('div',{staticClass:\"eventLabel\"},[_vm._v(\"Committed Expenditure:\")]),_c('div',{staticClass:\"eventLabel\"},[_vm._v(\"Acctual Expenditure:\")]),_c('div',{staticClass:\"eventLabel\"},[_vm._v(\"Total Expenditure:\")])]),_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"2\",\"md\":\"2\"}},[_c('div',{staticClass:\"eventAnswer\"},[_vm._v(\"R \"+_vm._s(_vm.formatNum(_vm.budgetNumber)))]),_c('div',{staticClass:\"eventAnswer\"},[_vm._v(\"R \"+_vm._s(_vm.formatNum(_vm.committedTotal)))]),_c('div',{staticClass:\"eventAnswer\"},[_vm._v(\"R \"+_vm._s(_vm.formatNum(_vm.actualTotal)))]),_c('div',{staticClass:\"eventAnswer\"},[_vm._v(\"R \"+_vm._s(_vm.formatNum(_vm.data2.at(-1).y)))])])],1)],1)],1),_c('v-col',{staticClass:\"pa-0 ma-0\",attrs:{\"cols\":\"12\",\"sm\":\"2\",\"md\":\"2\"}},[_c('v-text-field',{staticClass:\"mt-0 pt-0 max\",attrs:{\"type\":\"number\",\"label\":\"Y-Limit\",\"rounded\":\"\",\"outlined\":\"\",\"dense\":\"\"},model:{value:(_vm.max),callback:function ($$v) {_vm.max=$$v},expression:\"max\"}})],1)],1):_vm._e(),_c('v-row')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',[_c('apexchart',{attrs:{\"type\":\"line\",\"options\":_vm.options,\"series\":_vm.series}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-container>\n    <apexchart type=\"line\" :options=\"options\" :series=\"series\"></apexchart>\n  </v-container>\n</template>\n\n<script>\nimport moment from \"moment\";\n\nexport default {\n  props: {\n    data1: {\n      type: Array,\n      default: null,\n      require: true,\n    },\n    data2: {\n      type: Array,\n      default: null,\n      require: true,\n    },\n    labels: {\n      type: Array,\n      default: null,\n      require: true,\n    },\n    budget: {\n      type: Number,\n      require: true,\n    },\n    currentMonth: {\n      type: String,\n      required: true,\n    },\n    max: {\n      type: Number,\n      require: true,\n    },\n    programmeName: {\n      type: String,\n      required: true,\n    },\n    committedCount: {\n      type: Number,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      options: {\n        title: {\n          text: \"Select a Programme\",\n          align: \"center\",\n        },\n\n        grid: {\n          show: false,\n        },\n\n        yaxis: {\n          show: false,\n        },\n\n        xaxis: {\n          type: \"datetime\",\n        },\n      },\n      series: [\n        {\n          name: \"Monthly Expenditure\",\n          data: [],\n        },\n        {\n          name: \"Accumalative Monthly Expenditure\",\n          data: [],\n        },\n      ],\n    };\n  },\n\n  watch: {\n    // When data changes re-setup graph\n    data1: function() {\n      this.series = [\n        {\n          data: this.data1,\n        },\n        {\n          data: this.data2,\n        },\n      ];\n\n      this.options = {\n        chart: {\n          height: 500,\n        },\n\n        title: {\n          text: `${this.programmeName} Expenditure Tracking`,\n          align: \"center\",\n        },\n\n        legend: {\n          show: true,\n          position: \"top\",\n        },\n\n        grid: {\n          show: true,\n        },\n\n        forecastDataPoints: {\n          count: this.committedCount,\n        },\n\n        yaxis: {\n          show: true,\n          showAlways: true,\n          min: 0,\n          max: this.max,\n\n          title: {\n            text: \"Expenditure (R)\",\n          },\n          labels: {\n            formatter: function(value) {\n              return value.toLocaleString(\"ru-RU\");\n            },\n          },\n        },\n\n        xaxis: {\n          type: \"datetime\",\n          labels: {\n            formatter: function(value, timestamp) {\n              return moment(new Date(timestamp)).format(\"DD MMM YY\"); // The formatter function overrides format property\n            },\n          },\n        },\n\n        annotations: {\n          yaxis: [\n            {\n              y: this.budget,\n              borderColor: \"#ff6347\",\n              label: {\n                borderColor: \"#ff6347\",\n                style: {\n                  color: \"#fff\",\n                  background: \"#ff6347\",\n                },\n                text: \"Budget\",\n              },\n            },\n          ],\n\n          xaxis: [\n            {\n              x: new Date(this.currentMonth).getTime(),\n              borderColor: \"#e1ad01\",\n              label: {\n                borderColor: \"#e1ad01\",\n                style: {\n                  color: \"#fff\",\n                  background: \"#e1ad01\",\n                },\n                text: \"Current Month\",\n              },\n            },\n          ],\n        },\n\n        tooltip: {\n          y: {\n            formatter: function(num) {\n              if (num % 1 === 0) {\n                return \"R \" + num.toLocaleString(\"ru-RU\");\n              } else {\n                let result =\n                  Number(num.toFixed(2))\n                    .toLocaleString(\"ru-RU\")\n                    .slice(0, -3) +\n                  Number(num.toFixed(2))\n                    .toString()\n                    .slice(\n                      Number(num.toFixed(2))\n                        .toString()\n                        .indexOf(\".\")\n                    );\n\n                return \"R \" + result;\n              }\n            },\n          },\n        },\n      };\n    },\n\n    // When y-limit changes re-setup graph\n    max: function() {\n      this.options = {\n        chart: {\n          height: 500,\n        },\n\n        title: {\n          text: `${this.programmeName} Expenditure Tracking`,\n          align: \"center\",\n        },\n\n        legend: {\n          show: true,\n          position: \"top\",\n        },\n\n        grid: {\n          show: true,\n        },\n\n        forecastDataPoints: {\n          count: this.committedCount,\n        },\n\n        yaxis: {\n          show: true,\n          showAlways: true,\n          min: 0,\n          max: this.max,\n\n          title: {\n            text: \"Expenditure (R)\",\n          },\n          labels: {\n            formatter: function(value) {\n              return value.toLocaleString(\"ru-RU\");\n            },\n          },\n        },\n\n        xaxis: {\n          type: \"datetime\",\n          labels: {\n            formatter: function(value, timestamp) {\n              return moment(new Date(timestamp)).format(\"DD MMM YY\"); // The formatter function overrides format property\n            },\n          },\n        },\n\n        annotations: {\n          yaxis: [\n            {\n              y: this.budget,\n              borderColor: \"#ff6347\",\n              label: {\n                borderColor: \"#ff6347\",\n                style: {\n                  color: \"#fff\",\n                  background: \"#ff6347\",\n                },\n                text: \"Budget\",\n              },\n            },\n          ],\n\n          xaxis: [\n            {\n              x: new Date(this.currentMonth).getTime(),\n              borderColor: \"#e1ad01\",\n              label: {\n                borderColor: \"#e1ad01\",\n                style: {\n                  color: \"#fff\",\n                  background: \"#e1ad01\",\n                },\n                text: \"Current Month\",\n              },\n            },\n          ],\n        },\n\n        tooltip: {\n          y: {\n            formatter: function(num) {\n              if (num % 1 === 0) {\n                return \"R \" + num.toLocaleString(\"ru-RU\");\n              } else {\n                let result =\n                  Number(num.toFixed(2))\n                    .toLocaleString(\"ru-RU\")\n                    .slice(0, -3) +\n                  Number(num.toFixed(2))\n                    .toString()\n                    .slice(\n                      Number(num.toFixed(2))\n                        .toString()\n                        .indexOf(\".\")\n                    );\n\n                return \"R \" + result;\n              }\n            },\n          },\n        },\n      };\n    },\n  },\n\n  computed: {},\n\n  mounted() {},\n};\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LineGraph.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LineGraph.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./LineGraph.vue?vue&type=template&id=34950690&\"\nimport script from \"./LineGraph.vue?vue&type=script&lang=js&\"\nexport * from \"./LineGraph.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VContainer } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VContainer})\n","<template>\n  <v-container>\n    <v-row justify=\"center\" class=\"pl-10\">\n      <v-col cols=\"12\" sm=\"2\" md=\"2\">\n        <v-autocomplete\n          v-model=\"chosenProgrammeId\"\n          label=\"Programme\"\n          :items=\"programmesOptions\"\n          @change=\"getData()\"\n        ></v-autocomplete>\n      </v-col>\n      <v-col cols=\"12\" sm=\"2\" md=\"2\">\n        <v-menu\n          ref=\"menu\"\n          v-model=\"menu1\"\n          :close-on-content-click=\"true\"\n          transition=\"scale-transition\"\n          offset-y\n          max-width=\"290px\"\n          min-width=\"auto\"\n        >\n          <template v-slot:activator=\"{ on, attrs }\">\n            <v-text-field\n              :value=\"beginDate\"\n              label=\"Begin Date\"\n              prepend-icon=\"mdi-calendar\"\n              readonly\n              v-bind=\"attrs\"\n              v-on=\"on\"\n              clearable\n              @click:clear=\"clearDates('begin')\"\n            ></v-text-field>\n          </template>\n          <v-date-picker\n            v-model=\"beginDate\"\n            no-title\n            scrollable\n            @change=\"getData()\"\n          >\n          </v-date-picker>\n        </v-menu>\n      </v-col>\n      <v-col cols=\"12\" sm=\"2\" md=\"2\">\n        <v-menu\n          ref=\"menu\"\n          v-model=\"menu2\"\n          :close-on-content-click=\"true\"\n          transition=\"scale-transition\"\n          offset-y\n          max-width=\"290px\"\n          min-width=\"auto\"\n        >\n          <template v-slot:activator=\"{ on, attrs }\">\n            <v-text-field\n              :value=\"endDate\"\n              label=\"End Date\"\n              prepend-icon=\"mdi-calendar\"\n              readonly\n              v-bind=\"attrs\"\n              v-on=\"on\"\n              clearable\n              @click:clear=\"clearDates('end')\"\n            ></v-text-field>\n          </template>\n          <v-date-picker\n            v-model=\"endDate\"\n            no-title\n            scrollable\n            @change=\"getData()\"\n          >\n          </v-date-picker>\n        </v-menu>\n      </v-col>\n    </v-row>\n\n    <v-row class=\"chartContainer\" justify=\"center\">\n      <LineGraph\n        :data1=\"data1\"\n        :data2=\"data2\"\n        :labels=\"labels\"\n        :budget=\"budgetNumber\"\n        :currentMonth=\"today\"\n        :max=\"parseFloat(max)\"\n        :programmeName=\"programmeName\"\n        :committedCount=\"committedCount\"\n      ></LineGraph>\n    </v-row>\n\n    <v-row justify=\"end\" v-if=\"data1.length != 0\" class=\"pa-0 ma-0\">\n      <v-col cols=\"12\" sm=\"10\" md=\"10\" class=\"pa-0 ma-0\">\n        <v-card-text>\n          <v-row justify=\"start\">\n            <v-col cols=\"12\" sm=\"3\" md=\"3\">\n              <div class=\"eventLabel\">Budget:</div>\n              <div class=\"eventLabel\">Committed Expenditure:</div>\n              <div class=\"eventLabel\">Acctual Expenditure:</div>\n              <div class=\"eventLabel\">Total Expenditure:</div>\n            </v-col>\n            <v-col cols=\"12\" sm=\"2\" md=\"2\">\n              <div class=\"eventAnswer\">R {{ formatNum(budgetNumber) }}</div>\n              <div class=\"eventAnswer\">R {{ formatNum(committedTotal) }}</div>\n              <div class=\"eventAnswer\">R {{ formatNum(actualTotal) }}</div>\n              <div class=\"eventAnswer\">R {{ formatNum(data2.at(-1).y) }}</div>\n            </v-col>\n          </v-row>\n        </v-card-text>\n      </v-col>\n      <v-col cols=\"12\" sm=\"2\" md=\"2\" class=\"pa-0 ma-0\">\n        <v-text-field\n          v-model=\"max\"\n          class=\"mt-0 pt-0 max\"\n          type=\"number\"\n          label=\"Y-Limit\"\n          rounded\n          outlined\n          dense\n        ></v-text-field>\n      </v-col>\n    </v-row>\n    <v-row> </v-row>\n  </v-container>\n</template>\n\n<script>\nimport { mapState, mapGetters } from \"vuex\";\nimport moment from \"moment\";\n\nimport LineGraph from \"@/components/LineGraph\";\n\nexport default {\n  components: { LineGraph },\n  data: () => {\n    return {\n      beginDate: null,\n      endDate: null,\n      beginIndex: null,\n      endIndex: null,\n      chosenProgrammeId: \"\",\n      data1: [],\n      data2: [],\n      labels: [],\n      menu1: false,\n      menu2: false,\n      budgetNumber: 0,\n      max: 1000,\n      programmeName: \"\",\n      committedTotal: 0,\n      actualTotal: 0,\n      committedCount: 0,\n      today: moment(new Date()).format(\"YYYY-MM-DD\"),\n    };\n  },\n\n  computed: {\n    ...mapState({\n      products: (state) => state.products.products,\n      programmes: (state) => state.programmes.programmes,\n    }),\n    ...mapGetters([\"getProgrammeById\"]),\n\n    currentMonth() {\n      const today = new Date();\n\n      const mm = String(today.getMonth()); //January is 0!\n      const yyyy = today.getFullYear();\n\n      let months = [\n        \"Jan\",\n        \"Feb\",\n        \"Mar\",\n        \"Apr\",\n        \"May\",\n        \"Jun\",\n        \"Jul\",\n        \"Aug\",\n        \"Sep\",\n        \"Oct\",\n        \"Nov\",\n        \"Dec\",\n      ];\n\n      const today2 = months[mm] + \" \" + yyyy;\n\n      return today2;\n    },\n\n    //Filter the products based on the programme id\n    filteredProducts() {\n      let filteredProducts = this.products.filter(\n        (product) =>\n          product.programme.programme_id === this.chosenProgrammeId &&\n          (product.status === \"Procurement\" ||\n            product.status === \"FollowUp\" ||\n            product.status === \"Quality\")\n      );\n\n      return filteredProducts;\n    },\n\n    programmesOptions() {\n      const map = this.programmes.map((programme) => {\n        return { text: programme.name, value: programme.id };\n      });\n      return map;\n    },\n  },\n\n  methods: {\n    // When dates are cleared get data again\n    clearDates(dateString) {\n      if (dateString == \"begin\") {\n        this.beginDate = null;\n      } else if (dateString == \"end\") {\n        this.endDate = null;\n      }\n\n      this.getData();\n    },\n\n    // format the numbers to have space between three numbers\n    formatNum(num) {\n      if (num % 1 === 0) {\n        return num.toLocaleString(\"ru-RU\");\n      } else {\n        let result =\n          Number(num.toFixed(2))\n            .toLocaleString(\"ru-RU\")\n            .slice(0, -3) +\n          Number(num.toFixed(2))\n            .toString()\n            .slice(\n              Number(num.toFixed(2))\n                .toString()\n                .indexOf(\".\")\n            );\n\n        return result;\n      }\n    },\n\n    // function that generates data based on user selection\n    getData() {\n      const getBuget = parseFloat(\n        this.getProgrammeById(this.chosenProgrammeId).budget\n      );\n\n      this.budgetNumber = getBuget;\n\n      this.max = getBuget;\n\n      this.programmeName = this.getProgrammeById(this.chosenProgrammeId).name;\n\n      this.splitCommitted();\n\n      const programmePaymentsArray = [];\n\n      // filter products of chosen programme to only prooducts with payments loaded\n      this.filteredProducts.forEach((product) => {\n        if (product.payments !== undefined) {\n          product.payments.forEach((payment) => {\n            programmePaymentsArray.push(payment);\n          });\n        }\n      });\n\n      // map payments to array for data\n      const map1 = programmePaymentsArray.map((payment) => {\n        return {\n          x: payment.date,\n          y: parseFloat(payment.value),\n          committed: payment.committed,\n        };\n      });\n\n      // sort payments by date\n      map1.sort((a, b) => (a.x > b.x ? 1 : -1));\n\n      //   console.log(map1);\n\n      let cutMap = [];\n\n      // if begin date and end date is chosen filter array accordingling\n      if (this.beginDate !== null && this.endDate !== null) {\n        cutMap = map1.filter((point) => {\n          return point.x >= this.beginDate && point.x <= this.endDate;\n        });\n\n        // make x labels accprding to data spliced\n        const map2 = cutMap.map((payment) => {\n          return payment.x;\n        });\n\n        this.labels = map2.sort();\n        // if begin date but not end date is chosen filter array accordingling\n      } else if (this.beginDate !== null) {\n        cutMap = map1.filter((point) => {\n          return point.x >= this.beginDate;\n        });\n\n        // make x labels accprding to data spliced\n        const map2 = cutMap.map((payment) => {\n          return payment.x;\n        });\n\n        this.labels = map2.sort();\n        // if end date but not begin date is chosen filter array accordingling\n      } else if (this.endDate !== null) {\n        cutMap = map1.filter((point) => {\n          return point.x <= this.endDate;\n        });\n\n        // make x labels accprding to data spliced\n        const map2 = cutMap.map((payment) => {\n          return payment.x;\n        });\n\n        this.labels = map2.sort();\n        // if no dates were chosen keep data as is\n      } else {\n        cutMap = map1;\n\n        const map2 = map1.map((payment) => {\n          return payment.x;\n        });\n\n        this.labels = map2.sort();\n      }\n\n      // ----------------------- PER MONTH OPTION -----------------------\n\n      // // get the month and year of the point to sum by month\n      // const mapMonthToSum = cutMap.map((x) => ({\n      //   ...x,\n      //   month: new Date(x.x).getMonth(),\n      //   year: new Date(x.x).getFullYear(),\n      // }));\n\n      // // run through array and sum if curr has sam year and month as accumulated (acc)\n      // const sumPerMonth = mapMonthToSum.reduce((acc, cur) => {\n      //   if (acc.length == 0) {\n      //     acc.push({\n      //       month: cur.month,\n      //       year: cur.year,\n      //       y: cur.y,\n      //     });\n      //   } else {\n      //     if (acc.at(-1).year == cur.year) {\n      //       if (acc.at(-1).month == cur.month) {\n      //         acc.at(-1).y = acc.at(-1).y + cur.y;\n      //       } else {\n      //         acc.push({\n      //           month: cur.month,\n      //           year: cur.year,\n      //           y: cur.y,\n      //         });\n      //       }\n      //     } else {\n      //       acc.push({\n      //         month: cur.month,\n      //         year: cur.year,\n      //         y: cur.y,\n      //       });\n      //     }\n      //   }\n\n      //   return acc;\n      // }, []);\n\n      // let months = [\n      //   \"Jan\",\n      //   \"Feb\",\n      //   \"Mar\",\n      //   \"Apr\",\n      //   \"May\",\n      //   \"Jun\",\n      //   \"Jul\",\n      //   \"Aug\",\n      //   \"Sep\",\n      //   \"Oct\",\n      //   \"Nov\",\n      //   \"Dec\",\n      // ];\n\n      // // map data to look good for graph\n      // let finalData = sumPerMonth.map((point) => {\n      //   return {\n      //     x: `${months[point.month]} ${point.year}`,\n      //     y: point.y,\n      //   };\n      // });\n\n      // // find the point in finalData that is for todays month\n      // const point = finalData.find((point) => {\n      //   return point.x == this.currentMonth;\n      // });\n\n      // // use the index to count number of months ahead and then set them as forcastCount\n      // this.committedCount = finalData.length - finalData.indexOf(point) - 1;\n\n      // let finalData2 = finalData.reduce((acc, cur) => {\n      //   if (acc.length == 0) {\n      //     acc.push({ x: cur.x, y: cur.y });\n      //   } else {\n      //     acc.push({ x: cur.x, y: acc.at(-1).y + cur.y });\n      //   }\n\n      //   return acc;\n      // }, []);\n\n      // this.data1 = finalData;\n      // this.data2 = finalData2;\n\n      // ----------------------- PER DAY OPTION -----------------------\n\n      // create array with daily expenditure amounts by checking if accumalative date is equal to current date if so adde expenditure amount\n      const sumPerDay = cutMap.reduce((acc, cur) => {\n        if (acc.length == 0) {\n          acc.push({\n            x: cur.x,\n            y: cur.y,\n          });\n        } else if (acc.at(-1).x == cur.x) {\n          acc.at(-1).y = acc.at(-1).y + cur.y;\n        } else {\n          acc.push({\n            x: cur.x,\n            y: cur.y,\n          });\n        }\n\n        return acc;\n      }, []);\n\n      // create array where the sum of current value and the previous values to create accumalitave graph\n      let finalData21 = sumPerDay.reduce((acc, cur) => {\n        if (acc.length == 0) {\n          acc.push({ x: cur.x, y: cur.y });\n        } else {\n          acc.push({ x: cur.x, y: acc.at(-1).y + cur.y });\n        }\n\n        return acc;\n      }, []);\n\n      // find point with todays date\n      let todayPoint = sumPerDay.find((point) => {\n        point.x == this.today;\n      });\n\n      // if no such point is found create point with point before todays data\n      if (todayPoint == undefined) {\n        sumPerDay.push({ x: this.today, y: 0.0 });\n\n        // sort payments by date\n        sumPerDay.sort((a, b) => (a.x > b.x ? 1 : -1));\n\n        let todayPoint2 = sumPerDay.find((point) => {\n          return point.x == this.today;\n        });\n\n        let index = sumPerDay.indexOf(todayPoint2);\n\n        todayPoint2.y = sumPerDay.at(index - 1).y;\n      }\n\n      // find point with todays date\n      let todayPoint3 = finalData21.find((point) => {\n        point.x == this.today;\n      });\n\n      // if no such point is found create point with point before todays data\n      if (todayPoint3 == undefined) {\n        finalData21.push({ x: this.today, y: 0.0 });\n\n        // sort payments by date\n        finalData21.sort((a, b) => (a.x > b.x ? 1 : -1));\n\n        let todayPoint4 = finalData21.find((point) => {\n          return point.x == this.today;\n        });\n\n        let index = finalData21.indexOf(todayPoint4);\n\n        todayPoint4.y = finalData21.at(index - 1).y;\n      }\n\n      this.data1 = sumPerDay;\n      this.data2 = finalData21;\n\n      let forcastNumber = 0;\n\n      // count number of point after current date and then make that the forecast number\n      sumPerDay.forEach((point) => {\n        if (point.x > this.today) {\n          forcastNumber += 1;\n        }\n      });\n\n      this.committedCount = forcastNumber;\n    },\n\n    splitCommitted() {\n      const committedTrue = [];\n      const committedFalse = [];\n\n      const current_month = moment(new Date()).format(\"MM\");\n\n      // filter products of chosen programme to only prooducts with payments loaded\n      this.filteredProducts.forEach((product) => {\n        if (product.payments !== undefined) {\n          product.payments.forEach((payment) => {\n            if (payment.date.split(\"-\")[1] < current_month) {\n              committedTrue.push(payment);\n            } else committedFalse.push(payment);\n          });\n        }\n      });\n\n      // Add all the values of the actual payments up for total\n      const actualTotal = committedTrue.reduce((accu, curr) => {\n        return accu + parseFloat(curr.value);\n      }, 0);\n\n      // Add all the values of the committed payments up for total\n      const committedTotal = committedFalse.reduce((accu, curr) => {\n        return accu + parseFloat(curr.value);\n      }, 0);\n\n      this.actualTotal = actualTotal;\n      this.committedTotal = committedTotal;\n    },\n  },\n\n  created() {\n    this.$store.dispatch(\"getProducts\");\n    this.$store.dispatch(\"getProgrammes\");\n  },\n\n  mounted() {},\n};\n</script>\n\n<style scoped>\n.max {\n  font-size: small;\n}\n\n.eventLabel {\n  color: grey;\n}\n\n.eventAnswer {\n  color: rgba(37, 37, 37, 0.87);\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Finance.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Finance.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Finance.vue?vue&type=template&id=6a40028c&scoped=true&\"\nimport script from \"./Finance.vue?vue&type=script&lang=js&\"\nexport * from \"./Finance.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Finance.vue?vue&type=style&index=0&id=6a40028c&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6a40028c\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VAutocomplete } from 'vuetify/lib/components/VAutocomplete';\nimport { VCardText } from 'vuetify/lib/components/VCard';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VDatePicker } from 'vuetify/lib/components/VDatePicker';\nimport { VMenu } from 'vuetify/lib/components/VMenu';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VTextField } from 'vuetify/lib/components/VTextField';\ninstallComponents(component, {VAutocomplete,VCardText,VCol,VContainer,VDatePicker,VMenu,VRow,VTextField})\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Finance.vue?vue&type=style&index=0&id=6a40028c&scoped=true&lang=css&\"","// Styles\nimport './VAutocomplete.sass'\n\n// Extensions\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect'\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport {\n  getObjectValueByPath,\n  getPropertyFromItem,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { PropType, VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nconst defaultMenuProps = {\n  ...VSelectMenuProps,\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false,\n}\n\n/* @vue/component */\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n\n  props: {\n    allowOverflow: {\n      type: Boolean,\n      default: true,\n    },\n    autoSelectFirst: {\n      type: Boolean,\n      default: false,\n    },\n    filter: {\n      type: Function,\n      default: (item: any, queryText: string, itemText: string) => {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1\n      },\n    } as PropValidator<(item: any, queryText: string, itemText: string) => boolean>,\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: () => defaultMenuProps,\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String as PropType<string | null>,\n    },\n  },\n\n  data () {\n    return {\n      lazySearch: this.searchInput,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSelect.options.computed.classes.call(this),\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1,\n      }\n    },\n    computedItems (): object[] {\n      return this.filteredItems\n    },\n    selectedValues (): object[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    hasDisplayedItems (): boolean {\n      return this.hideSelected\n        ? this.filteredItems.some(item => !this.hasItem(item))\n        : this.filteredItems.length > 0\n    },\n    currentRange (): number {\n      if (this.selectedItem == null) return 0\n\n      return String(this.getText(this.selectedItem)).length\n    },\n    filteredItems (): object[] {\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems\n\n      return this.allItems.filter(item => {\n        const value = getPropertyFromItem(item, this.itemText)\n        const text = value != null ? String(value) : ''\n\n        return this.filter(item, String(this.internalSearch), text)\n      })\n    },\n    internalSearch: {\n      get (): string | null {\n        return this.lazySearch\n      },\n      set (val: any) { // TODO: this should be `string | null` but it breaks lots of other types\n        // emit update event only when the new\n        // search value is different from previous\n        if (this.lazySearch !== val) {\n          this.lazySearch = val\n          this.$emit('update:search-input', val)\n        }\n      },\n    },\n    isAnyValueAllowed (): boolean {\n      return false\n    },\n    isDirty (): boolean {\n      return this.searchIsDirty || this.selectedItems.length > 0\n    },\n    isSearching (): boolean {\n      return (\n        this.multiple &&\n        this.searchIsDirty\n      ) || (\n        this.searchIsDirty &&\n        this.internalSearch !== this.getText(this.selectedItem)\n      )\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems || !this.hideNoData\n    },\n    $_menuProps (): object {\n      const props = VSelect.options.computed.$_menuProps.call(this);\n      (props as any).contentClass = `v-autocomplete__content ${(props as any).contentClass || ''}`.trim()\n      return {\n        ...defaultMenuProps,\n        ...props,\n      }\n    },\n    searchIsDirty (): boolean {\n      return this.internalSearch != null &&\n        this.internalSearch !== ''\n    },\n    selectedItem (): any {\n      if (this.multiple) return null\n\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue))\n      })\n    },\n    listData () {\n      const data = VSelect.options.computed.listData.call(this) as any\n\n      data.props = {\n        ...data.props,\n        items: this.virtualizedItems,\n        noFilter: (\n          this.noFilter ||\n          !this.isSearching ||\n          !this.filteredItems.length\n        ),\n        searchInput: this.internalSearch,\n      }\n\n      return data\n    },\n  },\n\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n    isFocused (val) {\n      if (val) {\n        document.addEventListener('copy', this.onCopy)\n        this.$refs.input && this.$refs.input.select()\n      } else {\n        document.removeEventListener('copy', this.onCopy)\n        this.$refs.input && this.$refs.input.blur()\n        this.updateSelf()\n      }\n    },\n    isMenuActive (val) {\n      if (val || !this.hasSlot) return\n\n      this.lazySearch = null\n    },\n    items (val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (\n        !(oldVal && oldVal.length) &&\n        this.hideNoData &&\n        this.isFocused &&\n        !this.isMenuActive &&\n        val.length\n      ) this.activateMenu()\n    },\n    searchInput (val: string) {\n      this.lazySearch = val\n    },\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf',\n  },\n\n  created () {\n    this.setSearch()\n  },\n\n  destroyed () {\n    document.removeEventListener('copy', this.onCopy)\n  },\n\n  methods: {\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return\n\n      this.setMenuIndex(-1)\n\n      this.$nextTick(() => {\n        if (\n          !this.internalSearch ||\n          (val.length !== 1 &&\n            !this.autoSelectFirst)\n        ) return\n\n        this.$refs.menu.getTiles()\n        this.setMenuIndex(0)\n      })\n    },\n    onInternalSearchChanged () {\n      this.updateMenuDimensions()\n    },\n    updateMenuDimensions () {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions()\n    },\n    changeSelectedIndex (keyCode: number) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return\n\n      if (this.multiple && keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = this.selectedItems.length - 1\n        } else {\n          this.selectedIndex--\n        }\n      } else if (this.multiple && keyCode === keyCodes.right) {\n        if (this.selectedIndex >= this.selectedItems.length - 1) {\n          this.selectedIndex = -1\n        } else {\n          this.selectedIndex++\n        }\n      } else if (keyCode === keyCodes.backspace || keyCode === keyCodes.delete) {\n        this.deleteCurrentItem()\n      }\n    },\n    deleteCurrentItem () {\n      const curIndex = this.selectedIndex\n      const curItem = this.selectedItems[curIndex]\n\n      // Do nothing if input or item is disabled\n      if (\n        !this.isInteractive ||\n        this.getDisabled(curItem)\n      ) return\n\n      const lastIndex = this.selectedItems.length - 1\n\n      // Select the last item if\n      // there is no selection\n      if (\n        this.selectedIndex === -1 &&\n        lastIndex !== 0\n      ) {\n        this.selectedIndex = lastIndex\n\n        return\n      }\n\n      const length = this.selectedItems.length\n      const nextIndex = curIndex !== length - 1\n        ? curIndex\n        : curIndex - 1\n      const nextItem = this.selectedItems[nextIndex]\n\n      if (!nextItem) {\n        this.setValue(this.multiple ? [] : null)\n      } else {\n        this.selectItem(curItem)\n      }\n\n      this.selectedIndex = nextIndex\n    },\n    clearableCallback () {\n      this.internalSearch = null\n\n      VSelect.options.methods.clearableCallback.call(this)\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data = mergeData(input.data!, {\n        attrs: {\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n        },\n        domProps: { value: this.internalSearch },\n      })\n\n      return input\n    },\n    genInputSlot () {\n      const slot = VSelect.options.methods.genInputSlot.call(this)\n\n      slot.data!.attrs!.role = 'combobox'\n\n      return slot\n    },\n    genSelections (): VNode | never[] {\n      return this.hasSlot || this.multiple\n        ? VSelect.options.methods.genSelections.call(this)\n        : []\n    },\n    onClick (e: MouseEvent) {\n      if (!this.isInteractive) return\n\n      this.selectedIndex > -1\n        ? (this.selectedIndex = -1)\n        : this.onFocus()\n\n      if (!this.isAppendInner(e.target)) this.activateMenu()\n    },\n    onInput (e: Event) {\n      if (\n        this.selectedIndex > -1 ||\n        !e.target\n      ) return\n\n      const target = e.target as HTMLInputElement\n      const value = target.value\n\n      // If typing and menu is not currently active\n      if (target.value) this.activateMenu()\n\n      this.internalSearch = value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      if (\n        e.ctrlKey ||\n        ![keyCodes.home, keyCodes.end].includes(keyCode)\n      ) {\n        VSelect.options.methods.onKeyDown.call(this, e)\n      }\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onSpaceDown (e: KeyboardEvent) { /* noop */ },\n    onTabDown (e: KeyboardEvent) {\n      VSelect.options.methods.onTabDown.call(this, e)\n      this.updateSelf()\n    },\n    onUpDown (e: Event) {\n      // Prevent screen from scrolling\n      e.preventDefault()\n\n      // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n      this.activateMenu()\n    },\n    selectItem (item: object) {\n      VSelect.options.methods.selectItem.call(this, item)\n      this.setSearch()\n    },\n    setSelectedItems () {\n      VSelect.options.methods.setSelectedItems.call(this)\n\n      // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n      if (!this.isFocused) this.setSearch()\n    },\n    setSearch () {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        if (\n          !this.multiple ||\n          !this.internalSearch ||\n          !this.isMenuActive\n        ) {\n          this.internalSearch = (\n            !this.selectedItems.length ||\n            this.multiple ||\n            this.hasSlot\n          )\n            ? null\n            : this.getText(this.selectedItem)\n        }\n      })\n    },\n    updateSelf () {\n      if (!this.searchIsDirty &&\n        !this.internalValue\n      ) return\n\n      if (!this.valueComparator(\n        this.internalSearch,\n        this.getValue(this.internalValue)\n      )) {\n        this.setSearch()\n      }\n    },\n    hasItem (item: any): boolean {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1\n    },\n    onCopy (event: ClipboardEvent) {\n      if (this.selectedIndex === -1) return\n\n      const currentItem = this.selectedItems[this.selectedIndex]\n      const currentItemText = this.getText(currentItem)\n      event.clipboardData?.setData('text/plain', currentItemText)\n      event.clipboardData?.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText)\n      event.preventDefault()\n    },\n  },\n})\n"],"sourceRoot":""}